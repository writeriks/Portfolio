{"version":3,"sources":["store/reducers/display-reducer/display-reducer-types.ts","Components/intro/robot.tsx","Components/intro/intro-name.tsx","store/reducers/display-reducer/display-reducer.ts","store/reducers.ts","store/createStore.ts","store/reducers/display-reducer/display-reducer-action-creator.ts","Components/intro/intro.tsx","Components/navbar/nav-bar-helper.ts","store/reducers/root-reducer-selector.ts","store/reducers/display-reducer/display-reducer-selector.ts","Components/navbar/nav-bar.tsx","Components/portfolio/star.tsx","Components/portfolio/tech-list.tsx","Components/portfolio/tech-i-use.tsx","Components/portfolio/portfolio-story-witht-typing.tsx","Components/portfolio/portfolio-story-without-typing.tsx","Components/portfolio/bubble.tsx","Components/portfolio/portfolio.tsx","Components/side-bar-menu/side-bar-menu-constants.ts","Components/side-bar-menu/side-bar-element.tsx","Components/side-bar-menu/side-bar-menu.tsx","Components/portfolio-main/portfolio-main.tsx","App.tsx","fonts/retganon/retganon.ttf","index.tsx"],"names":["DisplayActions","ComponentsInViewport","Robot","className","IntroName","initialDisplayState","isHamburgerMenuOpen","componentInViewPort","isTechListShown","displayReducer","state","action","type","TOGGLE_HAMBURGER_MENU","SET_COMPONENT_IN_VIEWPORT","SET_TECH_LIST_SHOWN","reducers","combineReducers","display","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxThunk","store","createStore","displayReducerActionCreator","Intro","props","myRef","useRef","inViewport","useInViewport","rootMargin","disconnectOnLeave","useEffect","dispatch","setComponentInViewPort","INTRO","id","ref","navBarHelper","toggleHamburgerMenu","rootStateReducer","getRootStateReducer","getDisplayReducer","createSelector","this","displayReducerSelector","getIsHamburgerMenuOpen","getComponentInViewport","getIsTechListShown","NavBar","useSelector","active","classnames","viewPortComponent","toLowerCase","color","href","target","rel","onClick","Star","startClass","isFilled","TechList","starsComponent","count","Array","from","length","e","i","map","number","TechIUse","useState","shouldShowTechList","setShouldShowTechList","timer1","setTimeout","setIsTechListShown","delay","clearTimeout","shownTechlist","unShownTechlist","speed","Delay","ms","PortfolioStoryWithTyping","PortfolioStoryWithoutTyping","Bubble","children","Portfolio","SideBarMenuTypes","viewPortRef","PORTFOLIO","SideBarElement","elementName","path","sideBarMenuConstants","SideBarMenu","classNames","element","index","PortfolioMain","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e178991.chunk.js","sourcesContent":["export enum DisplayActions {\r\n  TOGGLE_HAMBURGER_MENU = 'TOGGLE_HAMBURGER_MENU',\r\n  SET_COMPONENT_IN_VIEWPORT = 'SET_COMPONENT_IN_VIEWPORT',\r\n  SET_TECH_LIST_SHOWN = 'SET_TECH_LIST_SHOWN',\r\n}\r\n\r\nexport interface DisplayState {\r\n  isHamburgerMenuOpen: Boolean\r\n  componentInViewPort: string\r\n  isTechListShown: Boolean\r\n}\r\n\r\nexport type DisplayAction =\r\n  | { type: DisplayActions.TOGGLE_HAMBURGER_MENU }\r\n  | { type: DisplayActions.SET_COMPONENT_IN_VIEWPORT, componentInViewPort: string }\r\n  | { type: DisplayActions.SET_TECH_LIST_SHOWN, isTechListShown: boolean }\r\n\r\nexport enum ComponentsInViewport {\r\n  INTRO = 'INTRO-COMPONENT',\r\n  PORTFOLIO = 'PORTFOLIO-COMPONENT',\r\n  TESTIMONIALS = 'TESTIMONIALS-COMPONENT',\r\n  WORKS = 'WORKS-COMPONENT',\r\n  CONTACT = 'CONTACT-COMPONENT'\r\n}\r\n","import React from 'react'\r\nimport './robot.scss'\r\n\r\nconst Robot = () => {\r\n  return (\r\n    <div className=\"robot\">\r\n      <div className=\"antenna\">\r\n        <div className=\"white-point\"></div>\r\n      </div>\r\n      <div className=\"vertical-line\"></div>\r\n      <div className=\"head-square\">\r\n        <div className=\"face-square\">\r\n          <div className=\"face-container\">\r\n            <div className=\"top\">\r\n              <span>\r\n                <span></span>\r\n              </span>\r\n              <span>\r\n                <span></span>\r\n              </span>\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <div className=\"mouth\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"vertical-line\"></div>\r\n      <div className=\"body-rect\">\r\n        <div className=\"inner-body-rect\">\r\n          <div className=\"inner-body-container\">\r\n            <div className=\"left-arm\">\r\n              <div className=\"left-hand\">\r\n                <div className=\"left-hand-space\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right-arm\">\r\n              <div className=\"right-hand\">\r\n                <div className=\"right-hand-space\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"legs\">\r\n        <div className=\"left\">\r\n          <div className=\"foot\"></div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"foot\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Robot\r\n","import React from 'react'\r\nimport './intro-name.scss'\r\n\r\nconst IntroName = () => {\r\n  return (\r\n    <div className=\"intro-name\">\r\n      <span>\r\n        Hi, My name is Emir\r\n      </span>\r\n      <span>\r\n        I am a Software Engineer\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IntroName\r\n","import { DisplayAction, DisplayActions, DisplayState } from './display-reducer-types'\r\n\r\nexport const initialDisplayState = {\r\n  isHamburgerMenuOpen: false,\r\n  componentInViewPort: '',\r\n  isTechListShown: false\r\n}\r\n\r\nconst displayReducer = (state: DisplayState = initialDisplayState, action: DisplayAction): DisplayState => {\r\n  switch (action.type) {\r\n    case DisplayActions.TOGGLE_HAMBURGER_MENU:\r\n      return {\r\n        ...state,\r\n        isHamburgerMenuOpen: !state.isHamburgerMenuOpen\r\n      }\r\n\r\n    case DisplayActions.SET_COMPONENT_IN_VIEWPORT:\r\n      return {\r\n        ...state,\r\n        componentInViewPort: action.componentInViewPort\r\n      }\r\n\r\n    case DisplayActions.SET_TECH_LIST_SHOWN:\r\n      return {\r\n        ...state,\r\n        isTechListShown: action.isTechListShown\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default displayReducer\r\n","import { combineReducers } from 'redux'\r\nimport displayReducer from './reducers/display-reducer/display-reducer'\r\n\r\nexport const reducers = combineReducers({\r\n  display: displayReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof reducers>\r\n","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport { reducers } from './reducers'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(reduxThunk)\r\n)\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  enhancer\r\n)\r\n","import { DisplayAction, DisplayActions } from './display-reducer-types'\r\n\r\nclass DisplayReducerActionCreator {\r\n  toggleHamburgerMenu(): DisplayAction {\r\n    return {\r\n      type: DisplayActions.TOGGLE_HAMBURGER_MENU\r\n    }\r\n  }\r\n\r\n  setComponentInViewPort(componentInViewPort: string): DisplayAction {\r\n    return {\r\n      type: DisplayActions.SET_COMPONENT_IN_VIEWPORT,\r\n      componentInViewPort\r\n    }\r\n  }\r\n\r\n  setIsTechListShown(isTechListShown: boolean): DisplayAction {\r\n    return {\r\n      type: DisplayActions.SET_TECH_LIST_SHOWN,\r\n      isTechListShown\r\n    }\r\n  }\r\n}\r\n\r\nconst displayReducerActionCreator = new DisplayReducerActionCreator()\r\nexport default displayReducerActionCreator\r\n","import React, { useRef, useEffect } from 'react'\r\nimport './intro.scss'\r\nimport Robot from './robot'\r\nimport IntroName from './intro-name'\r\nimport { useInViewport } from 'react-in-viewport'\r\nimport { store } from '../../store/createStore'\r\nimport displayReducerActionCreator from '../../store/reducers/display-reducer/display-reducer-action-creator'\r\nimport { ComponentsInViewport } from '../../store/reducers/display-reducer/display-reducer-types'\r\n\r\nconst Intro = (props: any) => {\r\n  const myRef: any = useRef()\r\n  const {\r\n    inViewport\r\n  } = useInViewport(\r\n    myRef,\r\n    { rootMargin: '-100.0px' },\r\n    { disconnectOnLeave: false },\r\n    props\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (inViewport) {\r\n      store.dispatch(displayReducerActionCreator.setComponentInViewPort(ComponentsInViewport.INTRO))\r\n    }\r\n  }, [inViewport])\r\n\r\n  return (\r\n    <div className=\"intro\" id=\"intro\" ref={myRef}>\r\n      <IntroName />\r\n      <Robot />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Intro\r\n","import { store } from '../../store/createStore'\r\nimport displayReducerActionCreator from '../../store/reducers/display-reducer/display-reducer-action-creator'\r\n\r\nclass NavBarHelper {\r\n  toggleHamburgerMenu() {\r\n    store.dispatch(displayReducerActionCreator.toggleHamburgerMenu())\r\n  }\r\n}\r\n\r\nconst navBarHelper = new NavBarHelper()\r\nexport default navBarHelper\r\n","import { createSelector } from 'reselect'\r\nimport { RootState } from '../reducers'\r\n\r\nclass RootStateReducer {\r\n  getRootStateReducer = (state: RootState) => state;\r\n\r\n  getDisplayReducer = createSelector(\r\n    this.getRootStateReducer,\r\n    (state) => state.display\r\n  )\r\n}\r\n\r\nconst rootStateReducer = new RootStateReducer()\r\nexport default rootStateReducer\r\n","import { createSelector } from 'reselect'\r\nimport rootStateReducer from '../root-reducer-selector'\r\n\r\nclass DisplayReducerSelector {\r\n  getIsHamburgerMenuOpen = createSelector(\r\n    rootStateReducer.getDisplayReducer,\r\n    (displayReducer) => displayReducer.isHamburgerMenuOpen\r\n  );\r\n\r\n  getComponentInViewport = createSelector(\r\n    rootStateReducer.getDisplayReducer,\r\n    (displayReducer) => displayReducer.componentInViewPort\r\n  );\r\n\r\n  getIsTechListShown = createSelector(\r\n    rootStateReducer.getDisplayReducer,\r\n    (displayReducer) => displayReducer.isTechListShown\r\n  );\r\n}\r\n\r\nconst displayReducerSelector = new DisplayReducerSelector()\r\nexport default displayReducerSelector\r\n","import React from 'react'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { useSelector } from 'react-redux'\r\nimport navBarHelper from './nav-bar-helper'\r\nimport classnames from 'classnames'\r\nimport displayReducerSelector from '../../store/reducers/display-reducer/display-reducer-selector'\r\nimport './nav-bar.scss'\r\n\r\nconst NavBar = () => {\r\n  const isHamburgerMenuOpen = useSelector(displayReducerSelector.getIsHamburgerMenuOpen)\r\n  const componentInViewPort = useSelector(displayReducerSelector.getComponentInViewport)\r\n\r\n  const { toggleHamburgerMenu } = navBarHelper\r\n  const active = classnames({ active: isHamburgerMenuOpen })\r\n  const viewPortComponent = componentInViewPort.toLowerCase()\r\n  const color = classnames(viewPortComponent)\r\n\r\n  return (\r\n    <div className={'nav-bar ' + active + ' ' + color} id=\"nav-bar\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"left\">\r\n          <a href=\"#intro\" className=\"logo\">\r\n            <ArrowBackIosIcon />\r\n            <span>Emir</span>\r\n            <ArrowForwardIosIcon />\r\n          </a>\r\n          <div className=\"item-container\">\r\n            <a href=\"https://github.com/writeriks\" target=\"_blank\" rel=\"noreferrer\">\r\n              <GitHubIcon className=\"icon\" />\r\n            </a>\r\n          </div>\r\n          <div className=\"item-container\">\r\n            <a href=\"https://www.linkedin.com/in/emir-haktan-%C3%B6zt%C3%BCrk-b80685a6/\" target=\"_blank\" rel=\"noreferrer\">\r\n              <LinkedInIcon className=\"icon\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"hamburger-menu\" onClick={() => toggleHamburgerMenu()}>\r\n            <span className=\"line1\"></span>\r\n            <span className=\"line2\"></span>\r\n            <span className=\"line3\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport './star.scss'\r\n\r\ninterface starProps {\r\n  isFilled: boolean,\r\n}\r\n\r\nconst Star: React.FC<starProps> = ({ isFilled }: starProps) => {\r\n  const startClass = isFilled ? 'star-filled' : 'star-empty'\r\n\r\n  return (\r\n\r\n    <div className={startClass}>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Star\r\n","import React from 'react'\r\nimport Star from './star'\r\n\r\nconst TechList = () => {\r\n  const starsComponent = (count: number) => {\r\n    const starArray = Array.from({ length: 5 }, (e, i) => i + 1)\r\n\r\n    const component = starArray.map(number => {\r\n      if (number <= count) {\r\n        return <Star key={number} isFilled={true} />\r\n      } else {\r\n        return <Star key={number} isFilled={false} />\r\n      }\r\n    })\r\n\r\n    return component\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <span className=\"tech\">\r\n          Javascript\r\n        </span>\r\n        <span className=\"stars\">\r\n          {starsComponent(4)}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span className=\"tech\">\r\n          React\r\n        </span>\r\n        <span className=\"stars\">\r\n          {starsComponent(3)}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span className=\"tech\">\r\n          Redux\r\n        </span>\r\n        <span className=\"stars\">\r\n          {starsComponent(3)}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span className=\"tech\">\r\n          CSS\r\n        </span>\r\n        <span className=\"stars\">\r\n          {starsComponent(3)}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TechList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Typing from 'react-typing-animation'\r\nimport { store } from '../../store/createStore'\r\nimport displayReducerActionCreator from '../../store/reducers/display-reducer/display-reducer-action-creator'\r\nimport displayReducerSelector from '../../store/reducers/display-reducer/display-reducer-selector'\r\nimport TechList from './tech-list'\r\n\r\nconst TechIUse = () => {\r\n  const isTechListShown = useSelector(displayReducerSelector.getIsTechListShown)\r\n  const [shouldShowTechList, setShouldShowTechList] = useState(false)\r\n  const delay = 7\r\n\r\n  useEffect(\r\n    () => {\r\n      const timer1 = setTimeout(() => {\r\n        setShouldShowTechList(true)\r\n        if (!isTechListShown) {\r\n          store.dispatch(displayReducerActionCreator.setIsTechListShown(true))\r\n        }\r\n      }, delay * 1000)\r\n      return () => {\r\n        clearTimeout(timer1)\r\n      }\r\n    }, [setShouldShowTechList])\r\n\r\n  const shownTechlist = (\r\n    <>\r\n      <a>Technologies i use :</a>\r\n      <TechList />\r\n    </>\r\n  )\r\n\r\n  const unShownTechlist = (\r\n    <>\r\n      <Typing speed={10}>\r\n        <Typing.Delay ms={6000} />\r\n        <a>Technologies i use :</a>\r\n      </Typing>\r\n      {shouldShowTechList && <TechList />}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isTechListShown ? shownTechlist : unShownTechlist\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TechIUse\r\n","import React from 'react'\r\nimport TechIUse from './tech-i-use'\r\nimport Typing from 'react-typing-animation'\r\n\r\nconst PortfolioStoryWithTyping = () => {\r\n  return (\r\n    <>\r\n      <span className=\"self-description\">\r\n        <span>\r\n          <Typing speed={10}>\r\n            <p>I am a software engineer living in Warsaw, Poland. Currently i work for Microstrategy Poland.</p>\r\n            <Typing.Delay ms={500} />\r\n            <p>I love programming, travelling, doing sport and playing computer games...</p>\r\n            <Typing.Delay ms={500} />\r\n          </Typing>\r\n        </span>\r\n      </span>\r\n      <span className=\"tech-i-use\">\r\n        <TechIUse />\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PortfolioStoryWithTyping\r\n","import React from 'react'\r\nimport TechIUse from './tech-i-use'\r\n\r\nconst PortfolioStoryWithoutTyping = () => {\r\n  return (\r\n    <>\r\n      <span className=\"self-description\">\r\n        <span>\r\n          <p>I am a software engineer living in Warsaw, Poland. Currently i work for Microstrategy Poland.</p>\r\n          <p>I love programming, travelling, doing sport and playing computer games...</p>\r\n        </span>\r\n      </span>\r\n      <span className=\"tech-i-use\">\r\n        <TechIUse />\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PortfolioStoryWithoutTyping\r\n","import React from 'react'\r\nimport './bubble.scss'\r\n\r\nconst Bubble = (props: any) => {\r\n  return (\r\n    <div className=\"bubble\">\r\n      <div className=\"inner\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bubble\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useInViewport } from 'react-in-viewport'\r\nimport { store } from '../../store/createStore'\r\nimport PortfolioStoryWithTyping from './portfolio-story-witht-typing'\r\nimport PortfolioStoryWithoutTyping from './portfolio-story-without-typing'\r\nimport Bubble from './bubble'\r\nimport displayReducerSelector from '../../store/reducers/display-reducer/display-reducer-selector'\r\nimport displayReducerActionCreator from '../../store/reducers/display-reducer/display-reducer-action-creator'\r\nimport { ComponentsInViewport } from '../../store/reducers/display-reducer/display-reducer-types'\r\nimport './portfolio.scss'\r\n\r\nfunction Portfolio(props: any) {\r\n  const isTechListShown = useSelector(displayReducerSelector.getIsTechListShown)\r\n  const viewPortRef = useRef<HTMLDivElement>(null)\r\n  const {\r\n    inViewport\r\n  } = useInViewport(\r\n    viewPortRef,\r\n    { rootMargin: '-100.0px' },\r\n    { disconnectOnLeave: false },\r\n    props\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (inViewport) {\r\n      store.dispatch(displayReducerActionCreator.setComponentInViewPort(ComponentsInViewport.PORTFOLIO))\r\n    }\r\n  }, [inViewport])\r\n\r\n  return (\r\n    <div className=\"portfolio\" id=\"portfolio\" ref={viewPortRef}>\r\n      <Bubble>\r\n        {\r\n          inViewport && (isTechListShown ? <PortfolioStoryWithoutTyping /> : <PortfolioStoryWithTyping />)\r\n        }\r\n      </Bubble>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Portfolio\r\n","\r\nexport enum SideBarMenuTypes {\r\n  Intro = 'Intro',\r\n  Portfolio = 'Portfolio',\r\n  Works = 'Works',\r\n  Testimonials = 'Testimonials',\r\n  Contact = 'Contact'\r\n}\r\n\r\nexport const sideBarMenuConstants = [\r\n  { elementName: SideBarMenuTypes.Intro },\r\n  { elementName: SideBarMenuTypes.Portfolio }\r\n  /*   { elementName: SideBarMenuTypes.Works },\r\n    { elementName: SideBarMenuTypes.Testimonials },\r\n    { elementName: SideBarMenuTypes.Contact } */\r\n]\r\n","import React from 'react'\r\nimport navBarHelper from '../navbar/nav-bar-helper'\r\nimport './side-bar-element.scss'\r\n\r\ninterface SideBarElementProp {\r\n  elementName: String,\r\n}\r\n\r\nconst SideBarElement = ({ elementName }: SideBarElementProp) => {\r\n  const { toggleHamburgerMenu } = navBarHelper\r\n  const path = elementName.toLowerCase()\r\n  return (\r\n    <li onClick={() => toggleHamburgerMenu()}>\r\n      <a href={`#${path}`}>{elementName}</a>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default SideBarElement\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport { useSelector } from 'react-redux'\r\nimport displayReducerSelector from '../../store/reducers/display-reducer/display-reducer-selector'\r\nimport SideBarElement from './side-bar-element'\r\nimport './side-bar-menu.scss'\r\nimport { sideBarMenuConstants } from './side-bar-menu-constants'\r\n\r\nconst SideBarMenu = () => {\r\n  const isHamburgerMenuOpen = useSelector(displayReducerSelector.getIsHamburgerMenuOpen)\r\n  const active = classNames({ active: isHamburgerMenuOpen })\r\n  const componentInViewPort = useSelector(displayReducerSelector.getComponentInViewport)\r\n  const viewPortComponent = componentInViewPort.toLowerCase()\r\n  const color = classNames(viewPortComponent)\r\n\r\n  return (\r\n    <div className={'side-bar-menu ' + active + ' ' + color}>\r\n      <ul>\r\n        {\r\n          sideBarMenuConstants.map((element, index) =>\r\n            (<SideBarElement key={index} elementName={element.elementName} />)\r\n          )\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideBarMenu\r\n","import React from 'react'\r\nimport Intro from '../intro/intro'\r\nimport NavBar from '../navbar/nav-bar'\r\nimport Portfolio from '../portfolio/portfolio'\r\nimport SideBarMenu from '../side-bar-menu/side-bar-menu'\r\nimport './portfolio-main.scss'\r\n\r\nconst PortfolioMain: React.FC = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n      <SideBarMenu />\r\n      <div className=\"sections\">\r\n        <Intro />\r\n        <Portfolio />\r\n        {/*         <Works />\r\n        <Testimonials />\r\n        <Contact /> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PortfolioMain\r\n","import PortfolioMain from './Components/portfolio-main/portfolio-main'\n\nfunction App() {\n  return (\n    <>\n      <PortfolioMain />\n    </>\n  )\n}\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/retganon.d22db1f1.ttf\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store/createStore'\nimport './fonts/retganon/retganon.ttf'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}